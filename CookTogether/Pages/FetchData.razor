@page "/fetchdata"

@using CookTogether.Models.Api
@inject MealApiService mealApiService
@inject DatabaseInitService databaseInitService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (areas == null || categories == null || ingredients == null || meals == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button @onclick="InitDatabase">Init database</button>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var area in areas)
            {
                <tr>
                    <td>@area.Name</td>
                </tr>
            }
            @foreach(var category in categories)
            {
                <tr>
                    <td>@category.Id</td>
                    <td>@category.Name</td>
                    <td>@category.ThumbnailUrl.ToString()</td>

                </tr>
            }
            @foreach(var ingredient in ingredients)
            {
                <tr>
                    <td>
                        @ingredient.Id
                    </td>
                    <td>
                        @ingredient.Name
                    </td>
                    <td>
                        <img src="@ingredient.ThumbnailUrl.ToString()"/>
                    </td>
                </tr>
            }
            @foreach(var meal in meals)
            {
                <tr>
                    <td>@meal.Id</td>
                    <td>@meal.Name</td>
                    <td>@meal.CategoryName</td>
                    <td>
                        <img src="@meal.ThumbnailUrl.ToString()" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Category[] categories;
    private Area[] areas;
    private Ingredient[] ingredients;
    private Meal[] meals;

    protected override async Task OnInitializedAsync()
    {
        areas = await mealApiService.GetAreas();
        categories = await mealApiService.GetCategories();
        ingredients = await mealApiService.GetIngredients();
        meals = await mealApiService.GetMealsStartingWith("a");
    }

    protected async Task InitDatabase()
    {
        await databaseInitService.RunInit();
    }
}
